<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Custom Rotation Function</title>
    <link href="/2023/10/03/Screen-Rotate-New/"/>
    <url>/2023/10/03/Screen-Rotate-New/</url>
    
    <content type="html"><![CDATA[<h1 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h1><p>That’s right, I made this video today mainly to fill in the gaps from the last video. Still, I would recommend you watch the video before reading this blog, as I don’t intend to write too much about it here.</p><h1 id="Caveat"><a href="#Caveat" class="headerlink" title="Caveat"></a>Caveat</h1><ol><li><code>math.h</code> and <code>windows.h</code> header files are required to use this function.<br></li><li>If a PI definition is missing or a more precise PI definition is needed, the statement <code>#define PI acos( -1.0 )</code> can be used directly.<br></li><li>If you don’t know how to convert between radians and angles, see <code>#define D2R(a) (a * (PI / 180))</code> and <code>#define R2D(a) (a * (180 / PI))</code>, where the former converts angles to radians and the latter converts radians to angles</li></ol><h1 id="Main-Function"><a href="#Main-Function" class="headerlink" title="Main Function"></a>Main Function</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">GetRotateRectPosition</span><span class="hljs-params">(POINT pt, SIZE sz, <span class="hljs-type">float</span> angle, PPOINT ppt)</span>&#123;<br>ppt[<span class="hljs-number">0</span>].x = pt.x + <span class="hljs-built_in">sin</span>(angle) * pt.y - <span class="hljs-built_in">cos</span>(angle) * pt.x, ppt[<span class="hljs-number">0</span>].y = pt.y - <span class="hljs-built_in">cos</span>(angle) * pt.y - <span class="hljs-built_in">sin</span>(angle) * pt.x;<br>ppt[<span class="hljs-number">1</span>].x = ppt[<span class="hljs-number">0</span>].x + <span class="hljs-built_in">cos</span>(angle) * sz.cx, ppt[<span class="hljs-number">1</span>].y = ppt[<span class="hljs-number">0</span>].y + <span class="hljs-built_in">sin</span>(angle) * sz.cx;<br>ppt[<span class="hljs-number">2</span>].x = ppt[<span class="hljs-number">0</span>].x - <span class="hljs-built_in">sin</span>(angle) * sz.cy, ppt[<span class="hljs-number">2</span>].y = ppt[<span class="hljs-number">0</span>].y + <span class="hljs-built_in">cos</span>(angle) * sz.cy;<br>&#125;<br></code></pre></td></tr></table></figure><br><p>The parameter pt denotes the centre of rotation, the parameter sz denotes the size of the rectangle, the parameter angle denotes the arc of rotation (in the positive clockwise direction), and the parameter ppt is used to pass the coordinates of the three vertices of the rotated rectangle.</p><h1 id="Take-An-Example"><a href="#Take-An-Example" class="headerlink" title="Take An Example"></a>Take An Example</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;windows.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;math.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> PI acos( -1.0 )</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> D2R(a) (a * (PI / 180))</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> R2D(a) (a * (180 / PI))</span><br><br><span class="hljs-type">void</span> <span class="hljs-title function_">GetRotateRectPosition</span><span class="hljs-params">(POINT pt, SIZE sz, <span class="hljs-type">float</span> angle, PPOINT ppt)</span>&#123;<br>ppt[<span class="hljs-number">0</span>].x = pt.x + <span class="hljs-built_in">sin</span>(angle) * pt.y - <span class="hljs-built_in">cos</span>(angle) * pt.x, ppt[<span class="hljs-number">0</span>].y = pt.y - <span class="hljs-built_in">cos</span>(angle) * pt.y - <span class="hljs-built_in">sin</span>(angle) * pt.x;<br>ppt[<span class="hljs-number">1</span>].x = ppt[<span class="hljs-number">0</span>].x + <span class="hljs-built_in">cos</span>(angle) * sz.cx, ppt[<span class="hljs-number">1</span>].y = ppt[<span class="hljs-number">0</span>].y + <span class="hljs-built_in">sin</span>(angle) * sz.cx;<br>ppt[<span class="hljs-number">2</span>].x = ppt[<span class="hljs-number">0</span>].x - <span class="hljs-built_in">sin</span>(angle) * sz.cy, ppt[<span class="hljs-number">2</span>].y = ppt[<span class="hljs-number">0</span>].y + <span class="hljs-built_in">cos</span>(angle) * sz.cy;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br><span class="hljs-type">int</span> w, h, angle;<br>POINT pt;<br>POINT ppt[<span class="hljs-number">3</span>];<br>SIZE sz;<br>HDC hdc;<br><br><span class="hljs-keyword">for</span>(;;)&#123;<br>hdc = GetDC(<span class="hljs-number">0</span>);<br>w = GetSystemMetrics(<span class="hljs-number">0</span>), h = GetSystemMetrics(<span class="hljs-number">1</span>);<br>pt.x = w / <span class="hljs-number">2</span>, pt.y = h / <span class="hljs-number">2</span>;<br>sz.cx = w, sz.cy = h;<br>angle = <span class="hljs-number">1</span>;<br>GetRotateRectPosition(pt, sz, D2R(angle), ppt);<br>PlgBlt(hdc, ppt, hdc, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, w, h, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br>ReleaseDC(<span class="hljs-number">0</span>, hdc);<br>DeleteObject(hdc);<br>Sleep(<span class="hljs-number">100</span>);<br>&#125;<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>Here’s an example where you can see that it’s rotated around the centre of the rectangle, and the results don’t show any surprises, as shown below.<br><img src="https://www.helloimg.com/images/2023/10/05/oH7kV9.jpg" alt="step-0"><br><img src="https://www.helloimg.com/images/2023/10/05/oH7VXX.jpg" alt="step-1"><br><img src="https://www.helloimg.com/images/2023/10/05/oH7VXX.jpg" alt="step-2"></p><h1 id="Ending"><a href="#Ending" class="headerlink" title="Ending"></a>Ending</h1><p>None Ending…</p>]]></content>
    
    
    
    <tags>
      
      <tag>C/C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PPT Problem From Seewo</title>
    <link href="/2023/04/06/Seewo-PPT-Problem/"/>
    <url>/2023/04/06/Seewo-PPT-Problem/</url>
    
    <content type="html"><![CDATA[<h1 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h1><p>About the purpose of writing this blog is solving a problem about Seewo.<br>I don’t like to see the font misalignment of the PPT because it will make the process of taking notes difficult.<br>So I offer a more common solution: reinstall.  </p><h1 id="Preparation"><a href="#Preparation" class="headerlink" title="Preparation"></a>Preparation</h1><p>A computer that has a problem, <a href="https://hopejieshuo.lanzoum.com/iDgQs0sahguh">Office Tool Plus</a>.  </p><h1 id="Tutorial"><a href="#Tutorial" class="headerlink" title="Tutorial"></a>Tutorial</h1><ol><li>Download Office-Tool-Plus.zip and unzip it  </li><li>Open the Office Tool Plus.exe inside and agree to the User Agreement(Tip:Disagreement to the User Agreement may result in failure to open)  </li><li>If a message box appears prompting an update, you can click No to cancel to save time.  </li><li>Click the Deploy button in the left column.  </li><li>Click the triangle button next to the Start Deployment button, select Import XML Configuration, import the Configuration.xml file in the folder where the EXE program is located.  </li><li>Select Download in Deployment Mode and start the deployment.  </li><li>After the download is complete, select Install in the Deployment Mode option and start the deployment.  </li><li>After the installation is completed, close the program, and after opening the PPT, you will find that the font is no longer misplaced.</li></ol><h1 id="Ending"><a href="#Ending" class="headerlink" title="Ending"></a>Ending</h1><p>However, when you open PPT, DOC and other files, you may be prompted to choose an application to open, and you can choose WPS Office to continue to use.<br>According to experience, the reason for PPT font confusion may be due to the lack of some core support libraries, resulting in fonts that cannot be displayed normally.  </p>]]></content>
    
    
    
    <tags>
      
      <tag>Other</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Some Of The ByteBeat I Found</title>
    <link href="/2023/01/25/ByteBeat/"/>
    <url>/2023/01/25/ByteBeat/</url>
    
    <content type="html"><![CDATA[<p>Hello, everyone. I found some ByteBeat.<br>Now let us looking and using these ByteBeat.  </p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">8000 Hz<br>(((t &gt;&gt; 6 | t &gt;&gt; 8) * t) &amp; 128)<br></code></pre></td></tr></table></figure>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">8000 Hz<br>(t * (t ^ t + (t &gt;&gt; 15 | 1) ^ (t - 1280 ^ t) &gt;&gt; 10))<br></code></pre></td></tr></table></figure>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">8000 Hz<br>(t * ((t &gt;&gt; 7 | t &gt;&gt; 9) &amp; 30))<br></code></pre></td></tr></table></figure>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">8000 Hz<br>(t * ((t &gt;&gt; 7 | t &gt;&gt; 9) &amp; 30))<br></code></pre></td></tr></table></figure>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">8000 Hz<br>(128 * sin(sin(t / 100) - t / (2 + (t &gt;&gt; 10 &amp; t &gt;&gt; 12) % 9)) + 128)<br></code></pre></td></tr></table></figure>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">8000 Hz<br>(((9 * t) &amp; (t &gt;&gt; 4)) | ((5 * t) &amp; (t &gt;&gt; 7)) | ((3 * t &amp; t &gt;&gt; 13)))<br></code></pre></td></tr></table></figure>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">8000 Hz<br>((t ^- 8) * (t &gt;&gt; 8))<br></code></pre></td></tr></table></figure>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">8000 Hz<br>((t &gt;&gt; 4 &gt;&gt; (t &amp; t &gt;&gt; 11)) * (t &gt;&gt; 4 &gt;&gt; (t &amp; t &gt;&gt; 11) &amp; 128 ? -1 : 1) + (t &gt;&gt; t / (t &amp; 65536 ? 2 : 3) &amp; 63) + (3000 / (t &amp; 4095) &amp; 100))<br></code></pre></td></tr></table></figure>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">8000 Hz<br>(t * (((t &gt;&gt; 11) &amp; (t &gt;&gt; 8)) &amp; (123 &amp; (t &gt;&gt; 3))))<br></code></pre></td></tr></table></figure>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">8000 Hz<br>((t | (t &gt;&gt; 9 | t &gt;&gt; 7)) * t &amp; (t &gt;&gt; 11 | t &gt;&gt; 9))<br></code></pre></td></tr></table></figure>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">8000 Hz<br>(t * ((t &gt;&gt; 9 | t &gt;&gt; 13) &amp; 25 &amp; t &gt;&gt; 6))<br></code></pre></td></tr></table></figure>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">8000 Hz<br>(((t &amp; t &gt;&gt; 8) | (t &amp; t &gt;&gt; 13)) * t)<br></code></pre></td></tr></table></figure>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">22025 Hz<br>(t &gt;&gt; 6 ^ t &amp; t &gt;&gt; 9 ^ t &gt;&gt; 12 | (t &lt;&lt; (t &gt;&gt; 6) % 4 ^- t &amp;- t &gt;&gt; 13) % 128 ^- t &gt;&gt; 1)<br></code></pre></td></tr></table></figure>  <figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs text">8000 Hz &amp; 32000Hz<br>(t * (t &gt;&gt; ((t &gt;&gt; 13) % 16)))<br></code></pre></td></tr></table></figure>  <p>So that’s it for today, bye!</p>]]></content>
    
    
    
    <tags>
      
      <tag>Other</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>How to Rotate Your Screen With C/C++?</title>
    <link href="/2023/01/09/Screen-Rotate/"/>
    <url>/2023/01/09/Screen-Rotate/</url>
    
    <content type="html"><![CDATA[<h1 id="Start"><a href="#Start" class="headerlink" title="Start"></a>Start</h1><p>Today, I maked a video about rotate computer screen with C&#x2F;C++, but I can not push my code in Bilibili, so I am pushing my code in here.<br>Note:You should including “windows.h” and “math.h”, defining a constant called PI and its value is “acos(-1.0)”.  </p><h1 id="First-Upper-Left"><a href="#First-Upper-Left" class="headerlink" title="First : Upper-Left"></a>First : Upper-Left</h1><p>First, the screen rotates around the vertex in the upper-left corner.<br>Below is the code about rotating clockwise:  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp">POINT pos[<span class="hljs-number">3</span>];<br>pos[<span class="hljs-number">0</span>].x = <span class="hljs-number">0</span>, pos[<span class="hljs-number">0</span>].y = <span class="hljs-number">0</span>;<br>pos[<span class="hljs-number">1</span>].x = <span class="hljs-built_in">cos</span>(a) * w, pos[<span class="hljs-number">1</span>].y = <span class="hljs-built_in">sin</span>(a) * w;<br>pos[<span class="hljs-number">2</span>].x = (<span class="hljs-number">-1</span>) * (<span class="hljs-built_in">sin</span>(a) * h), pos[<span class="hljs-number">2</span>].y = <span class="hljs-built_in">cos</span>(a) * h;<br></code></pre></td></tr></table></figure><p>Below is the code for counterclockwise rotation:  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp">POINT pos[<span class="hljs-number">3</span>];<br>pos[<span class="hljs-number">0</span>].x = <span class="hljs-number">0</span>, pos[<span class="hljs-number">0</span>].y = <span class="hljs-number">0</span>;<br>pos[<span class="hljs-number">1</span>].x = <span class="hljs-built_in">cos</span>(a) * w, pos[<span class="hljs-number">1</span>].y = (<span class="hljs-number">-1</span>) * (<span class="hljs-built_in">sin</span>(a) * w);<br>pos[<span class="hljs-number">2</span>].x = <span class="hljs-built_in">sin</span>(a) * h, pos[<span class="hljs-number">2</span>].y = <span class="hljs-built_in">cos</span>(a) * h;<br></code></pre></td></tr></table></figure><h1 id="Second-Upper-Right"><a href="#Second-Upper-Right" class="headerlink" title="Second : Upper-Right"></a>Second : Upper-Right</h1><p>Second,the screen rotates around the vertex in the upper-right corner.<br>Below is the code about rotating clockwise:  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp">POINT pos[<span class="hljs-number">3</span>];<br>pos[<span class="hljs-number">0</span>].x = w - (<span class="hljs-built_in">cos</span>(a) * w), pos[<span class="hljs-number">0</span>].y = (<span class="hljs-number">-1</span>) * (<span class="hljs-built_in">sin</span>(a) * w);<br>pos[<span class="hljs-number">1</span>].x = w, pos[<span class="hljs-number">1</span>].y = <span class="hljs-number">0</span>;<br>pos[<span class="hljs-number">2</span>].x = w - (<span class="hljs-built_in">cos</span>(a) * w) + (<span class="hljs-built_in">sin</span>(a) * h), pos[<span class="hljs-number">2</span>].y = (<span class="hljs-built_in">cos</span>(a) * h) - (<span class="hljs-built_in">sin</span>(a) * w);<br></code></pre></td></tr></table></figure><p>Below is the code for counterclockwise rotation:  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp">POINT pos[<span class="hljs-number">3</span>];<br>pos[<span class="hljs-number">0</span>].x = w - (<span class="hljs-built_in">cos</span>(a) * w), pos[<span class="hljs-number">0</span>].y = <span class="hljs-built_in">sin</span>(a) * w;<br>pos[<span class="hljs-number">1</span>].x = w, pos[<span class="hljs-number">1</span>].y = <span class="hljs-number">0</span>;<br>pos[<span class="hljs-number">2</span>].x = w - (<span class="hljs-built_in">cos</span>(a) * w) + (<span class="hljs-built_in">sin</span>(a) * h), pos[<span class="hljs-number">2</span>].y = (<span class="hljs-built_in">cos</span>(a) * h) + (<span class="hljs-built_in">sin</span>(a) * w);<br></code></pre></td></tr></table></figure><h1 id="Third-Bottom-Left"><a href="#Third-Bottom-Left" class="headerlink" title="Third : Bottom-Left"></a>Third : Bottom-Left</h1><p>Third,the screen rotates around the vertex in the bottom-left corner.<br>Below is the code about rotating clockwise:  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp">POINT pos[<span class="hljs-number">3</span>];<br>pos[<span class="hljs-number">0</span>].x = <span class="hljs-built_in">sin</span>(a) * h, pos[<span class="hljs-number">0</span>].y = h - (<span class="hljs-built_in">cos</span>(a) * h);<br>pos[<span class="hljs-number">1</span>].x = (<span class="hljs-built_in">sin</span>(a) * h) + (<span class="hljs-built_in">cos</span>(a) * w), pos[<span class="hljs-number">1</span>].y = h - (<span class="hljs-built_in">cos</span>(a) * h - <span class="hljs-built_in">sin</span>(a) * w);<br>pos[<span class="hljs-number">2</span>].x = <span class="hljs-number">0</span>, pos[<span class="hljs-number">2</span>].y = h;<br></code></pre></td></tr></table></figure><p>Below is the code for counterclockwise rotation:  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp">POINT pos[<span class="hljs-number">3</span>];<br>pos[<span class="hljs-number">0</span>].x = (<span class="hljs-number">-1</span>) * (<span class="hljs-built_in">sin</span>(a) * h), pos[<span class="hljs-number">0</span>].y = h - (<span class="hljs-built_in">cos</span>(a) * h);<br>pos[<span class="hljs-number">1</span>].x = (<span class="hljs-built_in">cos</span>(a) * w) - (<span class="hljs-built_in">sin</span>(a) * h), pos[<span class="hljs-number">1</span>].y = h - (<span class="hljs-built_in">cos</span>(a) * h - <span class="hljs-built_in">sin</span>(a) * w);<br>pos[<span class="hljs-number">2</span>].x = <span class="hljs-number">0</span>, pos[<span class="hljs-number">2</span>].y = h;<br></code></pre></td></tr></table></figure><h1 id="Fourth-Bottom-Right"><a href="#Fourth-Bottom-Right" class="headerlink" title="Fourth : Bottom-Right"></a>Fourth : Bottom-Right</h1><p>Fourth,the screen rotates around the vertex in the bottom-right corner.<br>Below is the code about rotating clockwise:  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp">POINT pos[<span class="hljs-number">3</span>];<br>pos[<span class="hljs-number">0</span>].x = w - (<span class="hljs-built_in">cos</span>(a) * w - <span class="hljs-built_in">sin</span>(a) * h), pos[<span class="hljs-number">0</span>].y = h - (<span class="hljs-built_in">cos</span>(a) * h + <span class="hljs-built_in">sin</span>(a) * w);<br>pos[<span class="hljs-number">1</span>].x = w + (<span class="hljs-built_in">sin</span>(a) * h), pos[<span class="hljs-number">1</span>].y = h - (<span class="hljs-built_in">cos</span>(a) * h);<br>pos[<span class="hljs-number">2</span>].x = w - (<span class="hljs-built_in">cos</span>(a) * w), pos[<span class="hljs-number">2</span>].y = h - (<span class="hljs-built_in">sin</span>(a) * w);<br></code></pre></td></tr></table></figure><p>Below is the code for counterclockwise rotation:  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs cpp">POINT pos[<span class="hljs-number">3</span>];<br>pos[<span class="hljs-number">0</span>].x = w - (<span class="hljs-built_in">cos</span>(a) * w + <span class="hljs-built_in">sin</span>(a) * h), pos[<span class="hljs-number">0</span>].y = h - (<span class="hljs-built_in">cos</span>(a) * h - <span class="hljs-built_in">sin</span>(a) * w);<br>pos[<span class="hljs-number">1</span>].x = w - (<span class="hljs-built_in">sin</span>(a) * h), pos[<span class="hljs-number">1</span>].y = h - (<span class="hljs-built_in">cos</span>(a) * h);<br>pos[<span class="hljs-number">2</span>].x = w - (<span class="hljs-built_in">cos</span>(a) * w), pos[<span class="hljs-number">2</span>].y = h + (<span class="hljs-built_in">sin</span>(a) * w);<br></code></pre></td></tr></table></figure><h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><p>So how to use this code in our project?<br>You should use the PlgBlt Function to draw the desired bitmap based on the coordinates:  </p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp">HDC hdc = <span class="hljs-built_in">GetDC</span>(<span class="hljs-number">0</span>);<br><span class="hljs-type">int</span> w = <span class="hljs-built_in">GetSystemMetrics</span>(<span class="hljs-number">0</span>), h = <span class="hljs-built_in">GetSystemMetrics</span>(<span class="hljs-number">1</span>);<br>POINT pos[<span class="hljs-number">3</span>];<br><span class="hljs-comment">//put you rotate coordinates code in here</span><br><span class="hljs-built_in">PlgBlt</span>(hdc, pos, hdc, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, w, h, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br><span class="hljs-built_in">ReleaseDC</span>(<span class="hljs-number">0</span>,hdc);<br><span class="hljs-built_in">DeleteObject</span>(hdc);<br></code></pre></td></tr></table></figure><h1 id="Ending"><a href="#Ending" class="headerlink" title="Ending"></a>Ending</h1><p>So that’s it for today, I will push my code in <a href="https://hopejieshuo.github.io/2023/01/09/Screen-Rotate/Screen-Rotate.zip">this link</a>, bye!</p>]]></content>
    
    
    
    <tags>
      
      <tag>C/C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/01/07/Hello-World/"/>
    <url>/2023/01/07/Hello-World/</url>
    
    <content type="html"><![CDATA[<h1 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h1><p>There is nothing to see here.  </p><h1 id="About-Me"><a href="#About-Me" class="headerlink" title="About Me"></a>About Me</h1><p>A harmless GDI malware maker.<br>Good at C&#x2F;C++, HTML, CSS, JS, VB, Batch, VBScript.<br>Now is learning Python, Assembly.<br>Made Temp.exe, Lambda.exe, SCT.exe, IconCrazy.exe, and ScreenCrazy.exe, so on.  </p><h1 id="Good-Luck-For-You"><a href="#Good-Luck-For-You" class="headerlink" title="Good Luck For You"></a>Good Luck For You</h1>]]></content>
    
    
    
    <tags>
      
      <tag>Introduction</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
